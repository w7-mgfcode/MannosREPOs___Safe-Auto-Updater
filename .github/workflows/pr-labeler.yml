name: PR Labeler

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  label:
    name: Auto-label PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Label based on changed files
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

      - name: Label by PR title
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title.toLowerCase();
            const labels = [];

            // Detect type from title
            if (title.includes('feat') || title.includes('feature')) {
              labels.push('feature');
            }
            if (title.includes('fix') || title.includes('bugfix')) {
              labels.push('bugfix');
            }
            if (title.includes('security') || title.includes('vuln')) {
              labels.push('security');
            }
            if (title.includes('docs') || title.includes('documentation')) {
              labels.push('documentation');
            }
            if (title.includes('test')) {
              labels.push('tests');
            }
            if (title.includes('chore') || title.includes('deps')) {
              labels.push('dependencies');
            }
            if (title.includes('breaking')) {
              labels.push('breaking-change');
            }
            if (title.includes('[wip]') || title.includes('wip:')) {
              labels.push('work-in-progress');
            }

            // Add size label based on changes
            const files = context.payload.pull_request.changed_files;
            const additions = context.payload.pull_request.additions;
            const deletions = context.payload.pull_request.deletions;
            const totalChanges = additions + deletions;

            if (totalChanges < 10) {
              labels.push('size/XS');
            } else if (totalChanges < 50) {
              labels.push('size/S');
            } else if (totalChanges < 200) {
              labels.push('size/M');
            } else if (totalChanges < 500) {
              labels.push('size/L');
            } else {
              labels.push('size/XL');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: labels
              });
            }
